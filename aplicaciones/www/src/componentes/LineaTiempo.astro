---
export interface Props {
  ancho?: number;
  alto?: number;
}

const { alto } = Astro.props;
const dimsVis = {
  alto: 250,
  altoVis: 0,
  marcoIz: 30,
  marcoAbajo: 20,
  margenIz: 10,
  margenArriba: 15,
  base: 0,
  inicioX: 0,
};

const numeroDivisiones = 5;
const divisiones = [...Array(numeroDivisiones + 1)].map((_, i) => i).filter((i) => !!i);
const pasoYDivision = 100 / numeroDivisiones;
---

<section id="lineaDeTiempo">
  <!-- POR HACER: Reemplazar nombre por lugar seleccionado -->
  <header>
    <h3 id="nombreLugar">Colombia</h3>
  </header>

  <svg id="grafica" width="100%" height="100%" style={`height:${alto}vh`}>
    <!-- <defs>
      <linearGradient id="arriba" x1="50%" y1="0%" x2="50%" y2="100%">
        <stop offset="0%" style="stop-color: rgb(39, 247, 186); stop-opacity: 1"></stop>
        <stop offset="100%" style="stop-color: rgb(39, 247, 186); stop-opacity: 1"></stop>
      </linearGradient>

      <linearGradient id="abajo" x1="50%" y1="0%" x2="50%" y2="100%">
        <stop offset="0%" style="stop-color: rgb(39, 247, 186); stop-opacity: 1"></stop>
        <stop offset="100%" style="stop-color: rgb(39, 247, 146); stop-opacity: 1"></stop>
      </linearGradient>
    </defs> -->

    <!-- MARCO -->
    <line class="lineaMarco" x1={dimsVis.marcoIz} y1="0" x2={dimsVis.marcoIz} y2="100%" shape-rendering="crispEdges"
    ></line>

    {
      divisiones.map((i) => (
        <line
          class="lineaCuadricula"
          x1={`${dimsVis.marcoIz}px`}
          y1={`${i * pasoYDivision}%`}
          x2="100%"
          y2={`${i * pasoYDivision}%`}
          shape-rendering="crispEdges"
        />
      ))
    }

    <line class="lineaMarco lineaBase" x1={dimsVis.marcoIz} y1="98%" x2="100%" y2="98%" shape-rendering="crispEdges"
    ></line>

    <text class="nombreEje lineaBase" x="0" y="100%">Año</text>
  </svg>
</section>

<script>
  import { porcentajeAPixeles } from '@/utilidades/ayudas';
  import { listaAños, datosIndicadorNal } from '@/utilidades/cerebro';
  import { convertirEscala } from '@enflujo/alquimia';

  const svg = document.getElementById('grafica') as HTMLElement & SVGElement;
  const informacion = document.getElementById('informacion');
  const dimsSvg = svg.getBoundingClientRect();

  const dimsVis = {
    alto: dimsSvg.height,
    altoVis: 0,
    marcoIz: 30,
    marcoAbajo: 25,
    margenIz: 10,
    margenArriba: 15,
    base: 0,
    inicioX: 0,
  };

  const cantidadDivisiones = 5;
  const posicionY = (valor: number) =>
    convertirEscala(valor, 100, 0, dimsVis.margenArriba, dimsVis.alto - dimsVis.marcoAbajo);

  const lineaDeTiempo = document.getElementById('lineaDeTiempo');

  function construirLinea(puntos) {
    let linea = '';

    puntos.forEach((punto: { x: number; y: number }, i: number) => {
      // // POR HACER! cambiar los valores cuando no es porcentaje

      if (i === 0) {
        linea += `M${punto.x} ${punto.y}`;
      } else {
        if (!punto.y) {
          if (puntos[i + 1].y) {
            ultimoY = puntos[i + 1].y;
          }
          linea += `M${puntos[i + 1].x} ${ultimoY} `;
        } else {
          linea += ` L${punto.x} ${punto.y}`;
        }
      }
    });

    return linea;
  }

  function escalar() {
    let ancho = window.innerWidth;
    let alto = window.innerHeight;
  }
  let puntos = [];
  let puntosLinea = '';
  let ultimoY = 0;

  listaAños.subscribe((lista) => {
    const x1Porcentaje = 5;
    const x1Pixeles = porcentajeAPixeles(x1Porcentaje, dimsSvg.width);
    const x2Porcentaje = 95;
    const x2Pixeles = porcentajeAPixeles(x2Porcentaje, dimsSvg.width);
    const posX = (valor: number) =>
      convertirEscala(valor, +lista[0].año, +lista[lista.length - 1].año, x1Porcentaje, x2Porcentaje);

    const posicionX = (valor: number) =>
      convertirEscala(valor, +lista[0].año, +lista[lista.length - 1].año, x1Pixeles, x2Pixeles);

    const grupoLinea = document.createElementNS('http://www.w3.org/2000/svg', 'g');
    const grupoEjeY = document.createElementNS('http://www.w3.org/2000/svg', 'g');
    const grupoAños = document.createElementNS('http://www.w3.org/2000/svg', 'g');
    const linea = document.createElementNS('http://www.w3.org/2000/svg', 'path');

    grupoAños.setAttribute('class', 'marcasAños');
    grupoEjeY.setAttribute('class', 'ejeY');
    grupoLinea.setAttribute('class', 'lineaTiempo');

    lista.forEach(({ año }, i) => {
      const marcaAño = document.createElementNS('http://www.w3.org/2000/svg', 'line');
      const marcaEjeY = document.createElementNS('http://www.w3.org/2000/svg', 'line');
      const textoEjeY = document.createElementNS('http://www.w3.org/2000/svg', 'text');
      const punto = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      const texto = document.createElementNS('http://www.w3.org/2000/svg', 'text');
      const x = posX(+año);

      marcaAño.setAttribute('class', 'marcaMarco');
      marcaAño.setAttribute('x1', `${x}%`);
      marcaAño.setAttribute('y1', `0`);
      marcaAño.setAttribute('x2', `${x}%`);
      marcaAño.setAttribute('y2', `5`);

      texto.setAttribute('class', 'año textoEje');
      texto.setAttribute('x', `${x}%`);
      texto.setAttribute('y', `15`);
      texto.innerHTML = `${año}`;

      if (i <= cantidadDivisiones) {
        const textoEje = (100 / cantidadDivisiones) * i;
        const y = posicionY(textoEje);
        marcaEjeY.setAttribute('class', 'marcaMarco');
        marcaEjeY.setAttribute('x1', `${dimsVis.marcoIz}px`);
        marcaEjeY.setAttribute('y1', `${y}px`);
        marcaEjeY.setAttribute('x2', `${dimsVis.marcoIz - 5}px`);
        marcaEjeY.setAttribute('y2', `${y}px`);

        textoEjeY.setAttribute('class', 'textoEje textoEjeY');
        textoEjeY.setAttribute('x', `${dimsVis.marcoIz}`);
        textoEjeY.setAttribute('y', `${y}px`);

        textoEjeY.innerHTML = `${textoEje}`;
        grupoEjeY.appendChild(marcaEjeY);
        grupoEjeY.appendChild(textoEjeY);
      }

      grupoAños.appendChild(marcaAño);
      grupoAños.appendChild(texto);

      if (datosIndicadorNal.value.datos[año]) {
        puntos.push({
          x: `${posicionX(+año)}`,
          y: `${posicionY(datosIndicadorNal.value.datos[año])}`,
        });
      } else {
        puntos.push({
          x: `${posicionX(+año)}`,
          y: null,
        });
      }

      punto.setAttribute('class', 'punto');

      punto.onmouseenter = (evento) => {
        const x = evento.pageX;
        const y = evento.pageY - 30;
        informacion.innerText = `${datosIndicadorNal.value.datos[año]}%`;
        informacion.classList.add('visible');

        Object.assign(informacion.style, {
          top: `${y}px`,
          left: `${x}px`,
        });
      };

      punto.onmouseleave = () => {
        informacion.classList.remove('visible');
      };

      if (datosIndicadorNal.value.datos[año]) {
        punto.setAttribute('r', `1px`);
        punto.setAttribute('cx', `${puntos[i].x}`);
        punto.setAttribute('cy', `${puntos[i].y}`);
        grupoLinea.appendChild(punto);
      }

      if (datosIndicadorNal.value.datos[año]) {
        ultimoY = posicionY(datosIndicadorNal.value.datos[año]);
      }
    });

    puntos.forEach((punto, i) => {
      if (i === 0) {
        puntosLinea += `M${punto.x} ${punto.y}`;
      } else {
        if (!punto.y) {
          if (puntos[i + 1].y) {
            ultimoY = puntos[i + 1].y;
          }
          puntosLinea += `M${puntos[i + 1].x} ${ultimoY} `;
        } else {
          puntosLinea += ` L${punto.x} ${punto.y}`;
        }
      }
    });

    let lineaDePuntos = construirLinea(puntos);

    linea.setAttribute('d', `${lineaDePuntos}`);
    grupoLinea.appendChild(linea);

    svg.appendChild(grupoAños);
    svg.appendChild(grupoEjeY);
    svg.appendChild(grupoLinea);
  });
</script>

<style lang="scss" is:global>
  #lineaDeTiempo {
    position: relative;
    margin: 2em;

    .lineaBase {
      transform: translateY(-25px);
    }

    h3 {
      margin: 0.3em 0;
    }

    #nombreLugar {
      color: rgb(46, 46, 46);
      text-transform: uppercase;
      font-size: 25px;
      font-weight: 700;
      letter-spacing: -0.4px;
    }

    #detalle {
      color: rgb(46, 46, 46);
      font-size: 0.9em;
      width: fit-content;
      position: fixed;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.25s ease-in-out;
      padding: 2px;
      background-color: white;
      font-weight: bold;
    }

    svg {
      display: block;

      .marcasAños {
        transform: translate(10px, calc(100% - 25px));
      }

      .lineaMarco {
        stroke: rgb(46, 46, 46);
        stroke-width: 3;
      }

      .lineaCuadricula {
        stroke: rgb(195, 194, 194);
        stroke-width: 0.5;
      }

      .marcaMarco {
        stroke: rgb(46, 46, 46);
        stroke-width: 2;
      }

      .lineaDivision {
        stroke: rgb(46, 46, 46);
        stroke-width: 1;
        opacity: 0.6;
      }

      .año {
        transform: translateX(-5px);
        cursor: pointer;

        &:hover {
          opacity: 0.6;
        }

        &.activo {
          opacity: 0.6;
          cursor: default;
        }
      }

      .añoActual {
        stroke: rgb(46, 46, 46);
        stroke-width: 4;
        opacity: 0.6;
      }

      .umbral {
        opacity: 0.6;
      }

      .nombreEje {
        font-size: 0.7em;
        fill: rgb(46, 46, 46);
        font-weight: bold;
        transform: translateY(-5px);
      }

      .textoEje {
        font-size: 10px;
        fill: rgb(46, 46, 46);
        font-weight: bold;
      }

      .lineaTiempo {
        stroke: var(--rosaBarbie);
        stroke-width: 2px;
        fill: none;
        transform: translateX(10px);
      }
      .punto {
        stroke: rgb(46, 46, 46);
        stroke-width: 5px;
        z-index: 9;
        cursor: pointer;
      }

      .textoEjeY {
        transform: translate(-25px, 5px);
      }
    }

    #descripcionY {
      color: rgb(46, 46, 46);
      font-size: 13px;
      font-weight: bold;
      margin-bottom: 20px;
    }

    #descripcionMeta {
      border: 2px solid #27f7ba;
      background-color: white;
      padding: 1em 1.5em;
      color: #0042bf;
      margin-top: 2em;
      margin-left: 30px;
    }
  }
</style>
