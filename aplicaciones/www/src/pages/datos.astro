---
import FichaTecnica from '@/componentes/FichaTecnica.astro';
import datos from '@/datosVisibles/indicadores';
import Plantilla from '@/plantillas/Principal.astro';
import pesos from '@/datosVisibles/pesosArchivos.json';
import { urlsAEnlacesHTML } from '@enflujo/alquimia';
console.log(pesos);
---

<Plantilla titulo="Datos" descripcion=" Aquí se encuentran los datos en bruto para descarga directa." conMenu={false}>
  <section class="contenedorDatos">
    <h1 id="tituloPagina">Datos</h1>

    <div id="datos">
      <div class="textoDatos">
        <p>
          Aquí se encuentran los datos en bruto para descarga directa en formato <span class="negrita">.xlsx</span>. En
          el menú selecciona el <span class="negrita">YA</span> del cual quieres obtener datos. Cada archivo incluye información
          de distintos años.
        </p>
      </div>

      <div class="botonesSubMenu">
        {
          datos.map((ya, i) => (
            <div
              class={`botonYaDatos${!ya.hay_datos ? ' desactivado' : ''}${i === 0 ? ' activo' : ''}`}
              data-ya={ya.ruta}
            >
              <span class="iconoYa" style={`background-image:url(${import.meta.env.BASE_URL}/iconos/ya${i + 1}.svg)`} />
              <span class="nombreYa">{`${i + 1} ${ya.nombre}`}</span>
              {!ya.hay_datos && <span class="explicacion">Este indicador no tiene datos</span>}
            </div>
          ))
        }
      </div>

      <div id="indicadores">
        {
          datos.map(
            (ya, i) =>
              ya.hay_datos && (
                <div id={ya.ruta} class={`contenedorYa${i === 0 ? ' visible' : ''}`}>
                  {ya.indicadores.map((indicador, j) => {
                    const datosArchivo = pesos[indicador.archivo];

                    return (
                      <div class="indicador">
                        <div class="columna">
                          <p class="enlace">
                            {datosArchivo ? (
                              <a href={`${import.meta.env.BASE_URL}/datos/descarga/${datosArchivo.nombre}`}>
                                <span class="nombre">{indicador.nombre}</span>
                                <span class="peso">({datosArchivo.peso})</span>
                              </a>
                            ) : (
                              <span class="nombre">{indicador.nombre}</span>
                            )}
                          </p>

                          {datosArchivo && (
                            <a
                              class="botonCaja"
                              href={`${import.meta.env.BASE_URL}/datos/descarga/${datosArchivo.nombre}`}
                            >
                              <img
                                class="iconoDescarga"
                                src={`${import.meta.env.BASE_URL}/imagenes/icono-descarga.svg`}
                                alt="Icono Descarga"
                              />{' '}
                              .xlsx
                            </a>
                          )}

                          <span class="abrirFicha botonCaja" data-ficha={`ya${i}i${j}`}>
                            Ficha técnica
                          </span>
                        </div>

                        <div class="columna definicion">
                          <p set:html={urlsAEnlacesHTML(indicador.definicion)} />
                        </div>

                        <div id={`ya${i}i${j}`} class="contenedorFicha">
                          <FichaTecnica rutaYa={ya.ruta} rutaIndicador={indicador.ruta} />
                        </div>
                      </div>
                    );
                  })}
                </div>
              )
          )
        }
      </div>
    </div>
  </section>
</Plantilla>

<script>
  const contenedor = document.getElementById('indicadores') as HTMLDivElement;
  const botones = document.querySelectorAll<HTMLSpanElement>('.abrirFicha');
  const botonesYa = document.querySelectorAll<HTMLDivElement>('.botonYaDatos');

  let fichaAbierta: HTMLDivElement;

  botones.forEach((boton) => {
    const idFicha = boton.dataset.ficha;
    const ficha = document.getElementById(idFicha) as HTMLDivElement;

    if (ficha) {
      boton.addEventListener('click', () => {
        if (fichaAbierta && fichaAbierta !== ficha) {
          fichaAbierta.classList.remove('abierta');
        }

        ficha.classList.toggle('abierta');
        fichaAbierta = ficha;
      });
    }
  });

  if (botonesYa && botonesYa.length) {
    botonesYa.forEach((boton) => {
      if (boton.classList.contains('desactivado')) return;
      const contenedorYa = document.getElementById(boton.dataset.ya);

      boton.addEventListener('click', () => {
        if (boton.classList.contains('activo')) return;

        const visible = contenedor.querySelector<HTMLDivElement>('.visible') as HTMLDivElement;
        visible.classList.remove('visible');
        contenedorYa.classList.add('visible');

        const activo = document.querySelector('.botonYaDatos.activo');

        if (activo) activo.classList.remove('activo');

        boton.classList.add('activo');
      });
    });
  }

  // Cerrar ficha al hacer click afuera
  document.body.addEventListener('click', (evento) => {
    if (!fichaAbierta) return;
    const elemento = evento.target as HTMLElement;
    if (elemento.classList.contains('abrirFicha')) return;

    if (!(elemento.classList.contains('contenedorFicha') || fichaAbierta.contains(elemento))) {
      fichaAbierta.classList.remove('abierta');
    }
  });
</script>

<style lang="scss">
  @use 'sass:color';
  @import '@/scss/constantes';

  .contenedorDatos {
    width: 70vw;
  }

  .contenedorFicha {
    display: none;
    position: fixed;
    justify-content: space-around;
    background-color: var(--blancoMarfil);
    top: 80px;
    left: 50%;
    transform: translateX(-50%);
    // width: 93%;
    background-color: var(--blancoMarfil);
    z-index: 7;
    &.abierta {
      display: flex;
    }
  }

  section {
    width: 60vw;
    max-width: 1300px;
    margin: 0 auto 7em auto;
  }

  .botonesSubMenu {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    font-size: 0.75em;

    .botonYaDatos {
      width: calc(50% - 10px);
      text-align: center;
      border: 1px solid;
      padding: 0 0.5em 0.5em 0.5em;
      margin-bottom: 10px;
      margin-right: 10px;
      cursor: pointer;

      &:hover {
        background-color: color.adjust(#7600db, $lightness: 70%);
      }

      &.activo {
        background-color: var(--uvaNinezYa);
        color: var(--blancoMarfil);
        cursor: default;

        .iconoYa {
          background-position-x: -48px;
        }
      }

      &.desactivado {
        display: none;
      }
    }

    .iconoYa {
      display: block;
      margin: 0 auto;
    }
  }

  #tituloPagina {
    padding: 2em 0 1em 0;
    font-family: var(--fuente);
  }

  #datos {
    max-width: 70vw;
    font-size: 1em;
    font-family: var(--fuente);
    color: var(--azulViejo);
    font-variation-settings:
      'MONO' 0,
      'CASL' 0,
      'wght' 700,
      'slnt' 0,
      'CRSV' 1;

    .textoDatos {
      font-variation-settings:
        'MONO' 0,
        'CASL' 0,
        'wght' 400,
        'slnt' 0,
        'CRSV' 0;
    }
  }
  form {
    margin-top: 2em;
    color: var(--uvaNinezYa);
    font-variation-settings:
      'MONO' 1,
      'CASL' 0,
      'wght' 800,
      'slnt' 0,
      'CRSV' 0;
  }

  #opciones {
    background-color: #ffffec;
    max-width: 30vw;
  }

  h1 {
    font-size: 2.2em;
    color: var(--uvaNinezYa);
    font-variation-settings:
      'MONO' 0,
      'CASL' 0,
      'wght' 700,
      'slnt' 0,
      'CRSV' 0;
  }

  .iconoDescarga {
    width: 14px;
    vertical-align: bottom;
  }

  #indicadores {
    // width: 70vw;
    margin-top: 2em;
  }

  .indicador {
    margin: 0.4em 0;
    border: 1px dotted;
    display: flex;

    .definicion {
      font-size: 0.85em;
    }
    // position: relative;
  }

  .contenedorYa {
    display: none;

    &.visible {
      display: block;
    }
  }

  .botonCaja {
    display: inline-block;
    background-color: var(--blancoMarfil);
    border-radius: 3px;
    border: solid 1px var(--azulViejo);
    padding: 0.4em;
    margin: 0 1em 1em 0;
    text-align: center;
    font-size: 0.8em;
    color: var(--azulViejo);
    cursor: pointer;

    &:hover {
      color: var(--blancoMarfil);
      background-color: var(--color22);
    }
  }

  /// ✂️ Cortes pantalla
  @media screen and (min-width: $corte1) {
  }
  @media screen and (min-width: $corte2) {
  }

  @media screen and (min-width: $corte3) {
    .botonesSubMenu {
      .botonYaDatos {
        width: calc(20% - 10px);

        &.desactivado {
          opacity: 0.4;
          cursor: default;
          display: block;

          .explicacion {
            font-family: Arial Helvetica sans-serif;
            display: block;
            font-style: italic;
            margin-top: 0.6em;
          }

          &:hover {
            background-color: transparent;
          }
        }
      }
    }
  }

  @media screen and (min-width: $corte4) {
    .contenedorDatos {
      width: 40vw;
      max-width: 1000px;
      margin: 0 auto 7em auto;
    }

    .contenedorFicha {
      justify-content: flex-start;
    }
  }
</style>
